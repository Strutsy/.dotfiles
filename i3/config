# font
set $font Roboto
set $size 11

# colors
set_from_resource $fg i3wm.color7 #ffffff
set_from_resource $bg i3wm.color0 #000000
set_from_resource $gray i3wm.color8 #444444
set_from_resource $red i3wm.color1 #ff0000

# class                 border  backgr. text indicator child_border
client.focused          $fg     $fg     $bg  $fg       $fg
client.focused_inactive $gray   $gray   $bg  $gray     $gray
client.unfocused        $gray   $gray   $bg  $gray     $gray
client.urgent           $red    $red    $bg  $red      $red
client.placeholder      $gray   $gray   $bg  $gray     $gray

client.background       $bg

# set $mod to super
set $mod Mod4

# autostart
exec_always dunst -fn "$font $size" -lb "$bg" -nb "$bg" -cb "$red" -lf "$fg" -nf "$fg" -cf "$bg" "400x60-36+36" -lto 3 -nto 5 -cto 0 -align "center" -padding 16 -horizontal_padding 16

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango: $font $size

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec urxvt
bindsym $mod+t exec urxvt

# kill focused window
bindsym $mod+q kill

# handle brightness keys
bindsym XF86MonBrightnessDown exec xbacklight -dec 10%
bindsym XF86MonBrightnessUp exec xbacklight -inc 10%

# handle volume keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle

# take screenshot
bindsym Print exec scrot; exec notify-send "screenshot captured"

# start dmenu (a program launcer)
bindsym $mod+d exec dmenu_run -nb "$bg" -nf "$fg" -sb "$red" -sf "$bg" -fn "$font-$size"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# toggle split direction
bindsym $mod+v split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

mode "[s]uspend [p]oweroff [h]ibernate" {
     bindsym s mode "default"; exec systemctl suspend
     bindsym p mode "default"; exec systemctl poweroff
     bindsym h mode "default"; exec systemctl hibernate
     bindsym Return mode "default"
     bindsym Escape mode "default"
     bindsym $mod+r mode "default"
}

bindsym $mod+p mode "[s]uspend [p]oweroff [h]ibernate"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
    separator_symbol "   "
    colors {
        background $bg
        statusline $fg
        separator $fg

        focused_workspace  $fg $fg $bg
        active_workspace   $bg $bg $fg
        inactive_workspace $bg $bg $fg
        urgent_workspace   $red $red $bg
        binding_mode       $red $red $bg
    }
}